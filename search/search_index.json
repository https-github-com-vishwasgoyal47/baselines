{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Base2lines A python package that can be used to benchmark various algorithms against dataset . Can be used to make graphs for sklearn pipelines","title":"Home"},{"location":"#base2lines","text":"A python package that can be used to benchmark various algorithms against dataset . Can be used to make graphs for sklearn pipelines","title":"Base2lines"},{"location":"Installation/installation_mac/","text":"Installation For working in Virtual environments Install virtualenv pip install virtualenv Make directory in which you want to create virtual environment mkdir mydir cd mydir Now create your own Virtual Environment python -m venv myenv Activate virtual environment source myenv/bin/activate Install base2lines pip install base2lines Download specific versions of requirements pip install -r requirements.txt","title":"For mac"},{"location":"Installation/installation_mac/#installation","text":"","title":"Installation"},{"location":"Installation/installation_mac/#for-working-in-virtual-environments","text":"","title":"For working in Virtual environments"},{"location":"Installation/installation_mac/#install-virtualenv","text":"pip install virtualenv","title":"Install virtualenv"},{"location":"Installation/installation_mac/#make-directory-in-which-you-want-to-create-virtual-environment","text":"mkdir mydir cd mydir","title":"Make directory in which you want to create virtual environment"},{"location":"Installation/installation_mac/#now-create-your-own-virtual-environment","text":"python -m venv myenv","title":"Now create your own Virtual Environment"},{"location":"Installation/installation_mac/#activate-virtual-environment","text":"source myenv/bin/activate","title":"Activate virtual environment"},{"location":"Installation/installation_mac/#install-base2lines","text":"pip install base2lines","title":"Install base2lines"},{"location":"Installation/installation_mac/#download-specific-versions-of-requirements","text":"pip install -r requirements.txt","title":"Download specific versions of requirements"},{"location":"Installation/installation_windows/","text":"Installation For working in Virtual environments Install virtualenv pip install virtualenv Make directory in which you want to create virtual environment mkdir mydir cd mydir Now create your own Virtual Environment virtualenv env Activate virtual environment \\env\\Scripts\\activate Install base2lines pip install base2lines Download specific versions of requirements pip install -r requirements.txt","title":"For windows"},{"location":"Installation/installation_windows/#installation","text":"","title":"Installation"},{"location":"Installation/installation_windows/#for-working-in-virtual-environments","text":"","title":"For working in Virtual environments"},{"location":"Installation/installation_windows/#install-virtualenv","text":"pip install virtualenv","title":"Install virtualenv"},{"location":"Installation/installation_windows/#make-directory-in-which-you-want-to-create-virtual-environment","text":"mkdir mydir cd mydir","title":"Make directory in which you want to create virtual environment"},{"location":"Installation/installation_windows/#now-create-your-own-virtual-environment","text":"virtualenv env","title":"Now create your own Virtual Environment"},{"location":"Installation/installation_windows/#activate-virtual-environment","text":"\\env\\Scripts\\activate","title":"Activate virtual environment"},{"location":"Installation/installation_windows/#install-base2lines","text":"pip install base2lines","title":"Install base2lines"},{"location":"Installation/installation_windows/#download-specific-versions-of-requirements","text":"pip install -r requirements.txt","title":"Download specific versions of requirements"},{"location":"Introduction/classification/","text":"Classification class : init method: Parameters: self : To be used in form of Classification() Functionality: Initializes Classification object classification method: Parameters: self : To be used in form of obj.classification(dataset) dataset : Any dataset of type pandas Dataframe Returns: benchmark : a dictionary that contains the weighted f1_score of various algorithms on the dataset given as input in classification(dataset)","title":"Classification Class"},{"location":"Introduction/classification/#classification-class","text":"","title":"Classification class :"},{"location":"Introduction/classification/#init-method","text":"","title":"init method:"},{"location":"Introduction/classification/#parameters","text":"self : To be used in form of Classification()","title":"Parameters:"},{"location":"Introduction/classification/#functionality","text":"Initializes Classification object","title":"Functionality:"},{"location":"Introduction/classification/#classification-method","text":"","title":"classification method:"},{"location":"Introduction/classification/#parameters_1","text":"self : To be used in form of obj.classification(dataset) dataset : Any dataset of type pandas Dataframe","title":"Parameters:"},{"location":"Introduction/classification/#returns","text":"benchmark : a dictionary that contains the weighted f1_score of various algorithms on the dataset given as input in classification(dataset)","title":"Returns:"},{"location":"Introduction/data/","text":"Data class : init method: Parameters: self : To be used in form of Data() Functionality: Initializes Data object show_datasets: Parameters: self : To be used in form of obj.show_datasets() Returns: dataset_names : returns a list that contains the list of all available datasets that can be loaded through load_dataset() load_dataset : Parameters: self : To be used in form of obj.show_dataset(name) name : contains the name of one of the datasets that were shown using show_datasets() Returns: dataset : returns a dataset whose name of given as input","title":"Data Class"},{"location":"Introduction/data/#data-class","text":"","title":"Data class :"},{"location":"Introduction/data/#init-method","text":"","title":"init method:"},{"location":"Introduction/data/#parameters","text":"self : To be used in form of Data()","title":"Parameters:"},{"location":"Introduction/data/#functionality","text":"Initializes Data object","title":"Functionality:"},{"location":"Introduction/data/#show_datasets","text":"","title":"show_datasets:"},{"location":"Introduction/data/#parameters_1","text":"self : To be used in form of obj.show_datasets()","title":"Parameters:"},{"location":"Introduction/data/#returns","text":"dataset_names : returns a list that contains the list of all available datasets that can be loaded through load_dataset()","title":"Returns:"},{"location":"Introduction/data/#load_dataset","text":"","title":"load_dataset :"},{"location":"Introduction/data/#parameters_2","text":"self : To be used in form of obj.show_dataset(name) name : contains the name of one of the datasets that were shown using show_datasets()","title":"Parameters:"},{"location":"Introduction/data/#returns_1","text":"dataset : returns a dataset whose name of given as input","title":"Returns:"},{"location":"Introduction/pipeline/","text":"Pipeline Class: init method: Parameters: self : To be used in form of obj.Pipeline(dataset) dataset : Takes a pandas dataframe as input . Functionality: Initializes Pipeline object show_graph method: Parameters: self : To be used in form of obj.show_graph(name) pipeline_show : any sklearn Pipeline() Functionality: Makes Dot Graph : converts the pipeline to list and saves the dot graph of pipeline as Filename.jpeg in your current directory","title":"Pipeline Class"},{"location":"Introduction/pipeline/#pipeline-class","text":"","title":"Pipeline Class:"},{"location":"Introduction/pipeline/#init-method","text":"","title":"init method:"},{"location":"Introduction/pipeline/#parameters","text":"self : To be used in form of obj.Pipeline(dataset) dataset : Takes a pandas dataframe as input .","title":"Parameters:"},{"location":"Introduction/pipeline/#functionality","text":"Initializes Pipeline object","title":"Functionality:"},{"location":"Introduction/pipeline/#show_graph-method","text":"","title":"show_graph method:"},{"location":"Introduction/pipeline/#parameters_1","text":"self : To be used in form of obj.show_graph(name) pipeline_show : any sklearn Pipeline()","title":"Parameters:"},{"location":"Introduction/pipeline/#functionality_1","text":"Makes Dot Graph : converts the pipeline to list and saves the dot graph of pipeline as Filename.jpeg in your current directory","title":"Functionality:"},{"location":"Introduction/regression/","text":"Regression Class: init method: Parameters: self : To be used in form of Regression() Functionality: Initializes Regression object regressor method: Parameters: self : To be used in form of obj.regressor(dataset) dataset : Takes a pandas dataframe as input . resultantColumn : the column on which the predictions will take place. It should be present in dataset . Returns: results : A pandas dataframe that contains the benchmarking of dataset over vaious algorithms using Pipeline() and GridSearchCV() .","title":"Regression Class"},{"location":"Introduction/regression/#regression-class","text":"","title":"Regression Class:"},{"location":"Introduction/regression/#init-method","text":"","title":"init method:"},{"location":"Introduction/regression/#parameters","text":"self : To be used in form of Regression()","title":"Parameters:"},{"location":"Introduction/regression/#functionality","text":"Initializes Regression object","title":"Functionality:"},{"location":"Introduction/regression/#regressor-method","text":"","title":"regressor method:"},{"location":"Introduction/regression/#parameters_1","text":"self : To be used in form of obj.regressor(dataset) dataset : Takes a pandas dataframe as input . resultantColumn : the column on which the predictions will take place. It should be present in dataset .","title":"Parameters:"},{"location":"Introduction/regression/#returns","text":"results : A pandas dataframe that contains the benchmarking of dataset over vaious algorithms using Pipeline() and GridSearchCV() .","title":"Returns:"},{"location":"Usage/classification/","text":"Classification Class Import Classification from baseline.classification import Classification Instantiate Classification classifier = Classification() Use classification method # dataset's last column should be the column to be classified results = classifier.classification(dataset) print(results)","title":"Classification Class"},{"location":"Usage/classification/#classification-class","text":"","title":"Classification Class"},{"location":"Usage/classification/#import-classification","text":"from baseline.classification import Classification","title":"Import Classification"},{"location":"Usage/classification/#instantiate-classification","text":"classifier = Classification()","title":"Instantiate Classification"},{"location":"Usage/classification/#use-classification-method","text":"# dataset's last column should be the column to be classified results = classifier.classification(dataset) print(results)","title":"Use classification method"},{"location":"Usage/data/","text":"Data Class import class from baseline.data from baseline.Data import Data Instatiate Data Class data = Data() Use show_dataset method dataset_names = data.show_dataset() print(dataset_names) Use load_dataset #name should be only from dataset_names dataset = data.load_dataset('name') print(dataset)","title":"Data Class"},{"location":"Usage/data/#data-class","text":"","title":"Data Class"},{"location":"Usage/data/#import-class-from-baselinedata","text":"from baseline.Data import Data","title":"import class from baseline.data"},{"location":"Usage/data/#instatiate-data-class","text":"data = Data()","title":"Instatiate Data Class"},{"location":"Usage/data/#use-show_dataset-method","text":"dataset_names = data.show_dataset() print(dataset_names)","title":"Use show_dataset method"},{"location":"Usage/data/#use-load_dataset","text":"#name should be only from dataset_names dataset = data.load_dataset('name') print(dataset)","title":"Use load_dataset"},{"location":"Usage/pipeline/","text":"Pipeline Class Import Pipeline from baseline.pipeline import Pipeline Instantiate Pipeline graph = Pipeline(dataset) Use show_graph #pipeline should only have sklearn components graph.show_graph(pipelineToBeShown)","title":"Pipeline Class"},{"location":"Usage/pipeline/#pipeline-class","text":"","title":"Pipeline Class"},{"location":"Usage/pipeline/#import-pipeline","text":"from baseline.pipeline import Pipeline","title":"Import Pipeline"},{"location":"Usage/pipeline/#instantiate-pipeline","text":"graph = Pipeline(dataset)","title":"Instantiate Pipeline"},{"location":"Usage/pipeline/#use-show_graph","text":"#pipeline should only have sklearn components graph.show_graph(pipelineToBeShown)","title":"Use show_graph"},{"location":"Usage/regression/","text":"Regression Class Import Regression Class from baseline.regression import Regression Instantiate Regression regressors = Regression() use regressor method # also pass the resultant column results = regressors.regressor(dataset , resultantColumn) print(results)","title":"Regression Class"},{"location":"Usage/regression/#regression-class","text":"","title":"Regression Class"},{"location":"Usage/regression/#import-regression-class","text":"from baseline.regression import Regression","title":"Import Regression Class"},{"location":"Usage/regression/#instantiate-regression","text":"regressors = Regression()","title":"Instantiate Regression"},{"location":"Usage/regression/#use-regressor-method","text":"# also pass the resultant column results = regressors.regressor(dataset , resultantColumn) print(results)","title":"use regressor method"}]}